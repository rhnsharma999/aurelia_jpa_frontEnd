{"version":3,"sources":["src/app.js","src/data.js","src/environment.js","src/main.js","src/resources/index.js"],"names":["App","message","empData","nameField","baseURL","cityField","refreshData","fetchedData","i","length","push","name","city","loadData","client","fetch","then","response","json","data","addData","console","log","comment","method","body","savedComment","catch","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","config"],"mappings":";;;;;;;;;;;;;;MAGaA,cAAAA;AACX,mBAAc;AAAA;;AACZ,WAAKC,OAAL,GAAe,cAAf;AACA,WAAKC,OAAL,GAAe,EAAf;AACA,WAAKC,SAAL,GAAiB,EAAjB;AACA,WAAKC,OAAL,GAAe,uBAAf;AACA,WAAKC,SAAL,GAAiB,EAAjB;AACD;;kBAGDC,mCAAYC,aAAY;AACvB,WAAKL,OAAL,GAAe,EAAf;AACA,WAAI,IAAIM,IAAI,CAAZ,EAAeA,IAAID,YAAYE,MAA/B,EAAsCD,GAAtC,EAA0C;AACzC,YAAGD,YAAYC,CAAZ,KAAkB,IAArB,EAA0B;AAC3B,eAAKN,OAAL,CAAaQ,IAAb,CAAkB,eAASH,YAAYC,CAAZ,EAAeG,IAAxB,EAA6BJ,YAAYC,CAAZ,EAAeI,IAA5C,CAAlB;AACA;AACC;AAED;;kBACDC,+BAAU;AAAA;;AACT,UAAIC,SAAS,oCAAb;AACAA,aAAOC,KAAP,CAAa,KAAKX,OAAL,GAAe,WAA5B,EACGY,IADH,CACQ;AAAA,eAAYC,SAASC,IAAT,EAAZ;AAAA,OADR,EAEGF,IAFH,CAEQ,gBAAQ;AACZ,cAAKV,WAAL,CAAiBa,IAAjB;AACD,OAJH;AAKA;;kBACDC,6BAAS;AAAA;;AACRC,cAAQC,GAAR,CAAY,WAAZ;AACA,UAAG,KAAKnB,SAAL,IAAkB,KAAKE,SAA1B,EAAoC;;AAEjC,YAAIkB,UAAU,EAACZ,MAAK,KAAKR,SAAX,EAAqBS,MAAK,KAAKP,SAA/B,EAAd;AACAgB,gBAAQC,GAAR,CAAYC,OAAZ;;AAEA,YAAIT,SAAS,oCAAb;;AAEAA,eACGC,KADH,CACS,KAAKX,OAAL,GAAe,YADxB,EACsC;AAClCoB,kBAAQ,MAD0B;AAElCC,gBAAM,8BAAKF,OAAL;AAF4B,SADtC,EAKGP,IALH,CAKQ;AAAA,iBAAYC,SAASC,IAAT,EAAZ;AAAA,SALR,EAMGF,IANH,CAMQ,wBAAgB;AACpBK,kBAAQC,GAAR,CAAYI,YAAZ;AACA,iBAAKb,QAAL;AACD,SATH,EAUGc,KAVH,CAUS,iBAAS,CAEf,CAZH;AAiBF;AACD;;;;;;;;;;;;;;;;;;KCzDUR,eAAAA,OACZ,cAAYR,IAAZ,EAAiBC,IAAjB,EAAsB;AAAA;;AACrB,OAAKD,IAAL,GAAYA,IAAZ;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACA;;;;;;;;oBCJa;AACbgB,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCECC,YAAAA;;;;;;;;;;AAAT,WAASA,SAAT,CAAmBC,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYN,KAAhB,EAAuB;AACrBG,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYN,OAAhB,EAAyB;AACvBE,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBrB,IAAhB,CAAqB;AAAA,aAAMe,QAAQO,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UChBeR,YAAAA;AAAT,WAASA,SAAT,CAAmBS,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["import {data} from './data'\nimport {HttpClient, json} from 'aurelia-fetch-client';\n//import {HttpClient} from 'aurelia-http-client';\nexport class App {\n  constructor() {\n    this.message = 'Hello World!';\n    this.empData = []\n    this.nameField = ''\n    this.baseURL = 'http://localhost:8080';\n    this.cityField = '';\n  }\n\n\n  refreshData(fetchedData){\n  \tthis.empData = []\n  \tfor(var i = 0; i < fetchedData.length;i++){\n  \t\tif(fetchedData[i] != null){\n\t\t\tthis.empData.push(new data(fetchedData[i].name,fetchedData[i].city));\n\t\t}\n  \t}\n\n  }\n  loadData(){\n  \tlet client = new HttpClient();\n  \tclient.fetch(this.baseURL + '/data/get')\n  \t  .then(response => response.json())\n  \t  .then(data => {\n  \t   \tthis.refreshData(data);\n  \t  });\n  }\n  addData(){\n  \tconsole.log('triggered');\n  \tif(this.nameField && this.cityField){\n\n      let comment = {name:this.nameField,city:this.cityField};\n      console.log(comment);\n\n      let client = new HttpClient();\n\n      client\n        .fetch(this.baseURL + '/data/post', {\n          method: 'post',\n          body: json(comment)\n        })\n        .then(response => response.json())\n        .then(savedComment => {\n          console.log(savedComment);\n          this.loadData();\n        })\n        .catch(error => {\n         \n        });\n\n\n\n\n  \t}\n  }\n}\n","export class data{\n\tconstructor(name,city){\n\t\tthis.name = name;\n\t\tthis.city = city;\n\t}\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}